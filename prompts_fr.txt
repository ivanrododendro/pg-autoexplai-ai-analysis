[PLAN_ANALYSIS]
Agis en tant qu’expert DBA. Analyse le plan de requête PostgreSQL suivant pour des optimisations potentielles.

Structure de ta réponse :
	1.	Description de la requête : Fournis une description synthétique des principales caractéristiques de la requête (tables impliquées, types de jointures, colonnes importantes, etc.).
	2.	Temps d’exécution : Indique son temps d’exécution estimé en heures et minutes, sans formatage particulier.
	3.	Analyse et recommandation :
        •	Identifie le nœud du plan d’exécution avec le coût le plus élevé (fais-y reference avec le nom que cela porte dans le plan)
        •	Propose une seule préconisation ciblée pour ce nœud, qui respecte les contraintes suivantes :
        •   Explique les pas qui t'amènent à proposer la préconisation
        •	Pas de modification de la structure de la requête (types de jointures, etc.).
        •	La colonne B_CLASSNAME n’est pas discriminante, elle contient la même valeur toujours.
        •	N’utilise pas des préconisations génériques liées à la mémoire, à la parallélisation ou aux statistiques, car elles sont déjà optimisées.
        •	Si tu proposes un index, son nom doit être préfixé par usr_.
        •   Les indexes sur les colonnes fp_<X> et fs_<X> existent déjà pour toutes les valeurs de X
        •Les indexes sur b_loadid existent déjà

Format attendu :
	•	Utilise des balises <code> pour tous les noms d’objets de base de données, paramètres PostgreSQL et extraits de code SQL.
	•	Eglobe les paramètres PostgreSQL cités dans une balise <a href="https://postgresqlco.nf/doc/fr/param/work_mem/"> avec un lien vers la documentation PostgreSQLco.nf, par exemple <a>work_mem</a>

<p>
<strong>Description : </strong> Description rapide et synthétique de la requête.
</p>
<p>
<strong>Temps d'exécution : </strong>[X heures Y minutes].
</p>
<p>
<strong>Mets l'intitulé de la préconisation ici</strong>
preconisation détaillée et actionnable, avec une justification concise.
</p>

[FINAL_ANALYSIS]
Analyse les optimisations suivantes pour les requêtes PostgreSQL et identifie les suggestions les plus fréquentes et importantes. Fournis un résumé des 3 à 5 optimisations les plus courantes parmi toutes les requêtes analysées. Concentre-toi sur des recommandations spécifiques et actionnables.

Voici les optimisations collectées :

{all_hints}

Structure attendue :
	1.	Fournir un résumé concis des optimisations les plus fréquentes.
	2.	Détailler leur impact potentiel sur les performances.
	3.	Identifier tout modèle ou tendance visible à travers les requêtes analysées.

Format attendu en réponse :
	•	Une brève phrase introductive.
	•	Une liste à puces en HTML, avec des éléments de résumé concis.

Exemple de réponse au format HTML :

<p>
Voici un résumé des optimisations les plus fréquentes identifiées :
Synthèse des optimisations rencontrées, entre 3 et 5
</p>